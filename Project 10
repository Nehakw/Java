Project: The Circle2D Class 

Problem Description:
Define the Circle2D class that contains: 
•	Two double data fields named x and y that specify the center of the circle with get methods.
•	A data field radius with a get method.
•	A no-arg constructor that creates a default circle with (0, 0) for (x, y) and 1 for radius.
•	A constructor that creates a circle with the specified x, y, and radius.
•	A method getArea() that returns the area of the circle.
•	A method getPerimeter() that returns the perimeter of the circle.
•	A method contains(double x, double y) that returns true if the specified point (x, y) is inside this circle. See Figure 10.14(a).
•	A method contains(Circle2D circle) that returns true if the specified circle is inside this circle. See Figure 10.14(b).
•	A method overlaps(Circle2D circle) that returns true if the specified circle overlaps with this circle. See the figure below.
        
    
Figure 
(a) A point is inside the circle. (b) A circle is inside another circle. (c) A circle overlaps another circle.

Draw the UML diagram for the class. Implement the class. Write a test program that creates a Circle2D object c1 (new Circle2D(2, 2, 5.5)), displays its area and perimeter, and displays the result of c1.contains(3, 3), c1.contains(new Circle2D(4, 5, 10.5)), and c1.overlaps(new Circle2D(3, 5, 2.3)).

Coding: (Copy and Paste Source Code here. Format your code using Courier 10pts)

public class Circle2D {
	
	private double x;
	private double y;
	private double radius;
	
	public Circle2D()
	{
		this(0, 0, 1);
	}
	
	public Circle2D(double x, double y, double radius)
	{
		this.x = x;
		this.y = y;
		this.radius = radius;		
	}
		
	public double getX()
	{
		return x;
	}
	
	public void setX(double x)
	{
		this.x = x;
	}
	
	public double getY()
	{
		return y;
	}
	
	public void setY(double y)
	{
		this.y = y;
	}
	
	public double getRadius()
	{
		return radius;
	}
	
	public void setRadius(double radius)
	{
		this.radius = radius;
	}
	
	public double getArea()
	{
		return Math.pow(radius, 2) * Math.PI;
	}
	
	public double getPerimeter()
	{
		return 2 * radius * Math.PI;
	}
	
	public boolean contains(double X, double Y)
	{
		double distance = Math.sqrt(Math.pow(x - X , 2) + Math.pow(y - Y, 2));
		if(distance < radius)
			return true;
		else
			return false;
	}
	
	public boolean contains(Circle2D circle)
	{
		double distance = Math.sqrt(Math.pow((x - circle.x), 2) + Math.pow((y - circle.y), 2));
		
		if(distance <= Math.abs(radius - circle.radius))
		{
			return true;
		}
		else
		{
			return false;
		}
	}
	
	public boolean overlaps(Circle2D circle)
	{
		double distance = Math.sqrt(Math.pow((x - circle.x), 2) + Math.pow((y - circle.y), 2));
		
		if(distance <= Math.abs(radius + circle.radius))
		{
			return true;
		}
		else
		{
			return false;
		}
	}
	
}


public class Exercise_10 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Circle2D c1 = new Circle2D(2, 2, 5.5);
		
		System.out.println("C1 area = " + c1.getArea() + " perimeter = " + c1.getPerimeter());
		System.out.println("Does c1 contain coordinate (3,3)? " + c1.contains(3, 3));
		System.out.println("Does c1 contains circle 2 centered at (4, 5) and radius 10.5? " + c1.contains(new Circle2D(4, 5, 10.5)));
		System.out.println("Does c1 overlaps circle centered at (3, 5) and radius 2.3? " + c1.overlaps(new Circle2D(3, 5, 2.3)));
	}

}
